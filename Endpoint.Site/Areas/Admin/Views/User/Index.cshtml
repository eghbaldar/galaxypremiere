@* DevelopeR: Alimohammad Eghbaldar http://eghbaldar.ir *@
@addTagHelper *,Microsoft.AspNetCore.Mvc.TagHelpers
@using galaxypremiere.Application.Services.Users.Queries.GetUsers
@model ResultGetUsersServiceDto

@{
    ViewData["Title"] = "Galaxy Premiere - Users List";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="card">
    <div class="card-header">
        <h4 class="card-title">Users List</h4>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table mb-0" id="tbUser">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Name</th>
                        <th>Product</th>
                        <th>Last Login</th>
                        <th>Role</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.resultGetUsersServiceDto)
                    {
                        <tr>
                            <td>@user.Id</td>
                            <td>@user.Fullname</td>
                            <td>@user.Email</td>
                            <td><span>456 pcs</span></td>
                            <td><span class="badge badge-success">@user.Role</span></td>
                            <td>
                                <div class="dropdown show">
                                    <a class="btn btn-secondary dropdown-toggle"
                                   href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        Action
                                    </a>

                                    <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                        <a class="dropdown-item"
                                       onclick="ShowUpdateModal('@user.Id','@user.Fullname','@user.Email','@user.Role')" href="#">Update</a>
                                        <a class="dropdown-item" onclick="deleteUser('@user.Id');" href="#">Delete</a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="upadteModal" tabindex="-1" role="dialog" aria-labelledby="upadteModal" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">
                    Update User:<label class="text-danger " id="updateUserTitle"></label>
                </h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <form asp-action="Update" id="frmUpdate" method="post">
                <div class="modal-body">
                    <input type="hidden" id="IdUser" />
                    <span asp-validation-for="Validation.Fullname" class="text-danger"></span>
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">Fullname</span>
                        </div>
                        <input asp-for="Validation.Fullname"
                               type="text"
                               class="form-control"
                               id="txtEditFullname"
                               placeholder="example: John K Fox">
                    </div>
                    <span asp-validation-for="Validation.Email" class="text-danger"></span>
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">Email Address</span>
                        </div>
                        <input asp-for="Validation.Email"
                               type="text"
                               id="txtEditEmail"
                               class="form-control"
                               placeholder="emaxple: youremail@gmail.com">
                    </div>

                    <input type="checkbox" id="chkPassword" onchange="changeCheckbox(this)" />
                    <label>Change Password</label>

                    <span asp-validation-for="Validation.Password" class="text-danger"></span>
                    <div class="input-group transparent-append">
                        <div class="input-group-prepend">
                            <span class="input-group-text"> <i class="fa fa-lock"></i> </span>
                        </div>
                        <input asp-for="Validation.Password"
                               type="password"
                               onkeyup="checkPassMatchRePass('#txtPassword','#txtRePassword','#spanInvalidRePassword')"
                               id="txtPassword"
                               class="form-control"
                               disabled>
                        <div class="input-group-append show-pass" style="cursor:pointer;">
                            <span class="input-group-text">
                                <div id="meter"></div>
                            </span>
                            <span id="spanGeneratePass"
                                  class="input-group-text" onclick="generatePass('#txtPassword','#txtRePassword')"
                                  style="pointer-events:none;">
                                <i class="fa fa-bolt"></i>
                            </span>
                            <span class="input-group-text">
                                <i id="spanPassVisibilty" onclick="showPassword('txtPassword','#spanPassVisibilty')" class="fa fa-eye-slash"></i>
                            </span>
                        </div>
                        <div id="val-password1-error" class="invalid-feedback animated fadeInUp" style="display: block;"></div>
                    </div>
                    <div id="spanInvalidRePassword" class="text-danger"></div>
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text">Re-Password:</span>
                        </div>
                        <input type="password"
                               id="txtRePassword"
                               onkeyup="checkPassMatchRePass('#txtPassword','#txtRePassword','#spanInvalidRePassword')"
                               class="form-control"
                               disabled>
                    </div>

                    <label>User Role:</label>
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <label class="input-group-text">Roles</label>
                        </div>
                        <select class="custom-select" id="listRoles" asp-items="@ViewBag.Roles" item
                                data-error-text="Please select an option" required
                                onchange="checkRoleValidation()">
                            <option selected="">Choose...</option>
                        </select>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" id="btnUpdate" onclick="Update()" class="btn btn-primary">Save changes</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles{
    <link href="~/lib/kingfuncs/password/password.css" rel="stylesheet" />
}
@section Scripts{
    <script src="~/lib/kingfuncs/password/password.js"></script>
    <script>
        function Update() {
            if ($("#frmUpdate").valid()) {
                // Check Password
                var password;
                if ($("#chkPassword").is(":checked")) {
                    if (!matchPassword($("#txtPassword"), $("#txtRePassword"))) return;
                    password = $("#txtPassword").val();
                }
                else
                    password = null;
                // Check Role
                var IdRole = $("#listRoles").val();
                if (!(checkRoleValidation())) return;
                // Body
                btnWaitMe_Start('btnUpdate'); // Loading Button Start
                Swal.fire(
                    {
                        title: 'Update User!',
                        text: 'Do you want to update this user?',
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonColor: '#15283c',
                        cancelButtonColor: '#ff5722',
                        confirmButtonText: 'Yes, Do It',
                        cancelButtonText: 'No'
                    }
                ).then((result) => {
                    if (result.value) {

                        pageWaitMe("progress"); // loading process starts

                        var IdUser = $("#IdUser").val();
                        var fullname = $("#txtEditFullname").val();
                        var email = $("#txtEditEmail").val();
                        var IdRole = $("#listRoles").val();

                        var postData = {
                            'IdUser': IdUser,
                            'Fullname': fullname,
                            'Email': email,
                            'Password': password,
                            'IdRole': IdRole,
                        }

                        if (checkIdRole(IdRole)) return false;

                        $.ajax({
                            contentType: 'application/x-www-form-urlencoded',
                            dataType: 'json',
                            type: 'POST',
                            data: postData,
                            url: 'Update',
                            success: function (data) {
                                if (data.isSuccess) {
                                    $("#upadteModal").modal("hide");
                                    Swal.fire({
                                        title: 'Succeed!',
                                        text: data.message,
                                        icon: 'success',
                                        confirmButtonColor: 'green',
                                        confirmButtonText: 'OK',
                                    }).then((result) => {
                                        if (result) {
                                            $("#tbUser").load("index #tbUser"); //update table automatically!
                                            btnWaitMe_Stop('btnUpdate'); // Loading Button Stops
                                            pageWaitMeRemove(); // loading process stops
                                        }
                                    });
                                }
                                else {
                                    btnWaitMe_Stop('btnUpdate'); // Loading Button Stops
                                    Swal.fire({
                                        title: 'Error!',
                                        text: data.message,
                                        icon: 'error',
                                        confirmButtonColor: 'red',
                                        confirmButtonText: 'Ok',
                                    }).then((result) => {
                                        //
                                    });
                                }
                            },
                            error: function (request, status, error) {
                                btnWaitMe_Stop('btnUpdate'); // Loading Button Stops
                                alert('errAjax=' + request.responseText);
                            }
                        });
                    }
                    else
                        btnWaitMe_Stop('btnUpdate'); // Loading Button Stops
                })
            }
            else {
                checkSomeOtherValidation();
            }

        }
        function ShowUpdateModal(id, name, email, role) {
            $("#upadteModal").modal("show");
            $("#IdUser").val(id);
            $("#updateUserTitle").text(name);
            $("#txtEditFullname").val(name);
            $("#txtEditEmail").val(email);
            //Show the exact item in dropbox based on value has been passed
            jQuery('[id^=listRoles] > option').each(function () { if (this.text.toLowerCase() == role.toLowerCase()) { jQuery('[id^=listRoles]').val(this.value); } });
        }
        function checkSomeOtherValidation() {
            if (!(checkRoleValidation())) return;
            matchPassword($("#txtPassword"), $("#txtRePassword"));
        }
        function checkRoleValidation() {
            var LstRoles = $("#listRoles");
            if (LstRoles.val() == "Choose...") {
                LstRoles.css("background-color", "#fcc");
                return false;
            }
            else {
                LstRoles.css("background-color", "#fff");
                return true;
            }
        }
        function checkIdRole(IdRole) {
            if (IdRole == 'Choose...') {
                Swal.fire({
                    title: 'Error!',
                    text: 'Choose a role.',
                    icon: 'error',
                    confirmButtonColor: '#ff5722',
                    confirmButtonText: 'OK',
                }).then((result) => {
                    //
                });
                return true;
            }
            else
                return false
        }
        function changeCheckbox(e) {
            var check = $(e).is(":checked");
            if (check) {
                $('#spanGeneratePass').css("pointer-events", "auto");
                $('#txtPassword').removeAttr('disabled');
                $('#txtRePassword').removeAttr('disabled');
            }
            else {
                $('#spanGeneratePass').css("pointer-events", "none");
                $('#txtPassword').attr('disabled', 'disabled');
                $('#txtRePassword').attr('disabled', 'disabled');
                $('#txtPassword').val('');
                $('#txtRePassword').val('');
            }
        }
        function deleteUser(idUser) {
            Swal.fire({
                title: 'Warning',
                text: 'Are you getting ready to DELETE this use forever?',
                icon: 'error',
                showCancelButton: true,
                confirmButtonColor: '#000222',
                cancelButtonColor: '#000222',
                confirmButtonText: 'Yes, Sure!',
                cancelButtonText: 'No, At All.'
            }).then((result) => {
                if (result) {

                    run_waitMe_body("progress"); // loading process starts

                    var postData = { 'IdUser': idUser };

                    $.ajax({
                        contentType: 'application/x-www-form-urlencoded',
                        dataType: 'json',
                        type: 'POST',
                        data: postData,
                        url: 'delete',
                        success: function (data) {
                            if (data.isSuccess) {
                                Swal.fire({
                                    title: 'Succeed!',
                                    text: data.message,
                                    icon: 'success',
                                    confirmButtonColor: 'green',
                                    confirmButtonText: 'Ok',
                                }).then((result) => {
                                    if (result) {
                                        $("#tbUser").load("index #tbUser"); //update table automatically!
                                        run_waitMe_body_remove(); // loading process stops
                                    }
                                });
                            }
                            else {
                                Swal.fire({
                                    title: 'Error!',
                                    text: data.message,
                                    icon: 'error',
                                    confirmButtonColor: 'red',
                                    confirmButtonText: 'Ok',
                                }).then((result) => {
                                    //
                                });
                            }
                        },
                        error: function (request, status, error) {
                            alert('err:' + request.responseText);
                        }
                    });

                }
            });
        }
    </script>
}