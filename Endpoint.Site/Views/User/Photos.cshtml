@* DevelopeR: Alimohammad Eghbaldar http://eghbaldar.ir *@
@using Endpoint.Site.Models.Users.GetPhoto
@using galaxypremiere.Application.Services.UsersPhotos.Queries.GetUsersPhotoAlbum;
@model dynamic
@{
    Layout = "~/Views/Shared/_LayoutInnerPages.cshtml";
}
@await Component.InvokeAsync("UserPhotosNavigation")

<style>
    /*General*/
    .white_shd {
        box-shadow: none !important;
    }

    .heading_section {
        border-top: 0;
        box-shadow: 2px 20px 12px -16px rgba(0,0,0,0.37);
        -webkit-box-shadow: 2px 20px 12px -16px rgba(0,0,0,0.37);
        -moz-box-shadow: 2px 20px 12px -16px rgba(0,0,0,0.37);
    }

    .album h4 {
        color: black;
    }

    .column {
        cursor: pointer;
        position: relative;
    }
    /*Folowing Menu On Album*/
    .divAlbumMenu {
        visibility: hidden;
        position: absolute;
        top: 4px;
        left: 5px;
    }

    .album:hover .divAlbumMenu {
        visibility: visible;
    }

    @@media (max-width:800px) {
        .divAlbumMenu {
            visibility: visible;
        }
    }
    /*DropMenu On the menu on album*/
    .dropbtn {
        background-color: transparent;
        color: white;
        padding: 5px;
        font-size: 26px;
        border: none;
    }

    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f1f1f1;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        .dropdown-content a {
            color: black;
            padding: 9px 13px;
            text-decoration: none;
            display: block;
        }

            .dropdown-content a:hover {
                background-color: #ddd;
            }

    .dropdown:hover .dropdown-content {
        display: block;
    }
    /* Loader for headshot and header */
    .loader {
        display: none;
        width: 100px;
        height: 100px;
        margin: auto;
        border: 16px solid #f3f3f3;
        border-radius: 50%;
        border-top: 16px solid #3498db;
        -webkit-animation: spin 2s linear infinite;
        animation: spin 2s linear infinite;
        opacity: .7;
    }

    @@-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(360deg);
        }
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
    /* Headshot */
    .HoverChangePhoto {
        margin: auto;
        display: none;
        color: white;
        background-color: black;
        width: 75px;
        height: 25px;
        border: 1px solid #ccc;
        padding: 5px;
        -moz-border-radius: 5px;
        -webkit-border-radius: 5px;
        border-radius: 5px;
    }

    #dropzoneAvatar {
        position: relative;
        border: 3px dashed gray;
        border-radius: 50%;
        color: #000;
        font: bold 14px arial;
        height: 200px;
        margin: 30px auto;
        text-align: center;
        width: 200px;
        background-image: url('../../../../sitetemplate/innerpages/images/layout_img/img-avatar.jpg');
        background-size: cover;
        background-repeat: repeat;
    }

        #dropzoneAvatar div {
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
        }

        #dropzoneAvatar img {
            border-radius: 50%;
            vertical-align: middle;
            max-width: 100%;
            max-height: 100%;
            width: 100%;
            height: 100%;
        }

        #dropzoneAvatar [type="file"] {
            cursor: pointer;
            position: absolute;
            opacity: 0;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
        }
</style>

<div id="TabUserAlbums" class="TabcontentClass active">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">ALBUMS</h4>
        </div>
        <div class="card-body">
            <div class="basic-form">
                <!-- Gallery section -->
                <div class="col-md-12">
                    <div class="white_shd full margin_bottom_30">
                        <div class="row mt-3" id="divAlbum">
                            <div class="col-sm-4 col-md-3 margin_bottom_30 album">
                                <div class="column">
                                    <a data-fancybox="gallery"
                                       onclick="OpenDialogueAddAlbum();">
                                        <img class="img-responsive"
                                             src="~/SiteTemplate/innerpages/images/layout_img/addAlbumProfile.svg" alt="#">
                                    </a>
                                </div>
                                <div class="heading_section">
                                    <h4>+ ADD A NEW ALBUM</h4>
                                </div>
                            </div>
                            @*<span>
                                @Model.Album
                            </span>*@
                            
                            @foreach (GetUsersPhotoAlbumServiceDto album in Model.Album.resultGetUsersPhotoAlbumServiceDto)
                            {
                                <span>1</span>
                            }
                            
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    @* Tabs *@
    <script src="~/sitetemplate/innerpages/plugins/tabNavigation/tab.js"></script>
    @* File Extension and Volume *@
    <script src="~/lib/kingfuncs/fileextensionsize/fileextensionsize.js"></script>
    @* Functions *@
    <script>
        function OpenDialogueAddAlbum() {
            Swal.fire({
                title: "ALBUM TITLE",
                input: "text",
                inputLabel: "This filed is required.",
                showCancelButton: true,
                inputValidator: (value) => {
                    if (!value) {
                        return "You need to write something!";
                    } else {
                        $.ajax({
                            contentType: 'application/x-www-form-urlencoded',
                            postType: 'json',
                            type: 'POST',
                            data: { 'Title': value },
                            url: 'ProfileAlbumPost',
                            success: function (data) {
                                if (data.isSuccess) {
                                    const Toast = Swal.mixin({
                                        toast: true,
                                        position: "top-end",
                                        showConfirmButton: false,
                                        timer: 3000,
                                        timerProgressBar: true,
                                        didOpen: (toast) => {
                                            toast.onmouseenter = Swal.stopTimer;
                                            toast.onmouseleave = Swal.resumeTimer;
                                        }
                                    });
                                    Toast.fire({
                                        icon: "success",
                                        title: "The Album Has Been Added Successfully."
                                    });
                                    $("#divAlbum").load(window.location + " #divAlbum");
                                }
                            },
                            error: function (req, status, err) {
                                Swal.fire({
                                    position: "center",
                                    icon: "error",
                                    title: "Something went wrong, please try it again or later!",
                                    showConfirmButton: false,
                                    timer: 3000
                                });
                            }
                        });
                    }
                }
            });
        }
        function DeletePhotoAlbum(id, title) {
            Swal.fire({
                title: 'Delete [' + title + '] album',
                text: 'All the photos of the album will be deleted, are you sure?',
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#000222',
                cancelButtonColor: '#000222',
                confirmButtonText: 'Yes',
                cancelButtonText: 'No'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        contentType: 'application/x-www-form-urlencoded',
                        postType: 'json',
                        type: 'POST',
                        data: { 'Id': id },
                        url: 'ProfileAlbumDelete',
                        success: function (data) {
                            const Toast = Swal.mixin({
                                toast: true,
                                position: "top-end",
                                showConfirmButton: false,
                                timer: 3000,
                                timerProgressBar: true,
                                didOpen: (toast) => {
                                    toast.onmouseenter = Swal.stopTimer;
                                    toast.onmouseleave = Swal.resumeTimer;
                                }
                            });
                            Toast.fire({
                                icon: "success",
                                title: "The Album Is Deleted Successfully!"
                            });
                            if (data.isSuccess) {
                                $("#divAlbum").load(window.location + " #divAlbum");
                            }
                        },
                        error: function (req, status, err) {
                            Swal.fire({
                                position: "center",
                                icon: "error",
                                title: "Something went wrong, please try it again or later!",
                                showConfirmButton: false,
                                timer: 3000
                            });
                        }
                    });
                }
            });
        }
        function UpdatePhotoAlbumTitle(id, title) {
            Swal.fire({
                title: 'The Album Current Title is [' + title + ']',
                input: "text",
                inputLabel: "New Title:",
                showCancelButton: true,
                inputValidator: (value) => {
                    if (!value) {
                        return "You Need to Write Something!";
                    } else {
                        $.ajax({
                            contentType: 'application/x-www-form-urlencoded',
                            postType: 'json',
                            type: 'POST',
                            data: { 'Id': id, 'Title': value },
                            url: 'ProfileAlbumRenameUpdate',
                            success: function (data) {
                                const Toast = Swal.mixin({
                                    toast: true,
                                    position: "top-end",
                                    showConfirmButton: false,
                                    timer: 3000,
                                    timerProgressBar: true,
                                    didOpen: (toast) => {
                                        toast.onmouseenter = Swal.stopTimer;
                                        toast.onmouseleave = Swal.resumeTimer;
                                    }
                                });
                                Toast.fire({
                                    icon: "success",
                                    title: "The title of the album was renamed successfully!"
                                });
                                if (data.isSuccess) {
                                    $("#divAlbum").load(window.location + " #divAlbum");
                                }
                            },
                            error: function (req, status, err) {
                                Swal.fire({
                                    position: "center",
                                    icon: "error",
                                    title: "Something went wrong, please try it again or later!",
                                    showConfirmButton: false,
                                    timer: 3000
                                });
                            }
                        });
                    }
                }
            });
        }

        function OpenAlbum(id, title) {
            $("#spanAlbumName").text(title);
            $("#hiddenAlbumName").val(id);
            tabNavigation(event, 'TabUserPhotos');
        }

        /*@* Upload Js *@*/
        var dropzoneavatar = $("#dropzoneAvatar");
        dropzoneavatar.on({
            dragenter: draginavatar,
            dragleave: dragoutavatar
        });
        var inputavatar = dropzoneavatar.find('input');
        inputavatar.on('change', dropavatar);

        $(dropzoneavatar).hover(
            function () {
                $("#HeadshotChangePhoto").css("display", "inline");
                dropzoneavatar.css("opacity", "0.5")
            }, function () {
                $(this).find("#HeadshotChangePhoto").css("display", "none");
                dropzoneavatar.css("opacity", "1")
            }
        );

        function draginavatar(e) { //function for drag into element, just turns the bix X white
            $(dropzoneavatar).addClass('hover');
        }
        function dragoutavatar(e) { //function for dragging out of element
            $(dropzoneavatar).removeClass('hover');
        }
        function dropavatar(e) {

            var file = this.files[0];
            // the following functions uses (fileextensionsize.js)
            if (KingCheckSizeExtension(file, ["jpg", "png", "bmp", "jpeg"], "2097152", true)) { // => 2 Mb // NOTE: If you want to change this value you will have to change the same value in (UpdateUsersInformationHeadshotService.cs) and (UploadSmallFilesService.cs)
                // ////////////////////////// Loaders
                $("#HeadshotLoader").css("display", "table-cell"); // circle loading on photo
                $("#dropzoneAvatar *").attr("disabled", "disabled").off('click'); // disable clickable
                $("#dropzoneAvatar *").css({ // clear ...
                    cursor: "wait",
                    opacity: "0.6",
                });
                $("#filedropzoneAvatar").css("opacity", "0");
                pageWaitMe("progress"); // loading process starts
                ////////////////////////////// upload file here

                var postData = new FormData();
                postData.append("File", file);
                postData.append("UsersAlbumsId", $("#hiddenAlbumName").val());
                postData.append("Title", "1");
                postData.append("Detail", "2");
                //alert($("#hiddenAlbumName").val());
                $.ajax({
                    contentType: false,
                    processData: false,
                    type: 'POST',
                    data: postData,
                    url: 'PostPhoto',
                    success: function (data) {
                        if (data.isSuccess) {
                            //////////////////////////// Loaders
                            $("#HeadshotLoader").css("display", "none"); // circle loading on photo
                            $("#dropzoneAvatar *").attr("disabled", false).off('click'); // enable clickable
                            $("#dropzoneAvatar *").css({ // clear ...
                                opacity: "1",
                                cursor: "pointer",
                            });
                            $("#filedropzoneAvatar").css("opacity", "0");
                            //////////////////////////////
                            showfileavatar(file); // shows file to feature it...
                        }
                        else {
                            KingSweetAlert(false, data.message);
                        }
                    },
                    error: function (req, res, err) {
                        KingSweetAlert(false, err);
                    }
                }).always(function () {
                    $("#HeadshotLoader").css("display", "none"); // circle loading on photo
                    $("#dropzoneAvatar *").attr("disabled", false).off('click'); // enable clickable
                    $('#dropzoneAvatar').removeClass('hover').addClass('dropped').find('img').remove();
                    $('#filedropzoneAvatar').val('');
                    $("#dropzoneAvatar *").css({ // clear ...
                        cursor: "pointer"
                    });
                    pageWaitMeRemove(); // loading process stops
                });
            }
        }

        function showfileavatar(file) {
            var reader = new FileReader(file);
            reader.readAsDataURL(file);
            reader.onload = function (e) {
                $('#dropzoneAvatar div:not(#HeadshotLoader):not(#HeadshotChangePhoto)').html($('<img />').attr('src', e.target.result).fadeIn());
            }
        }
        // SWEET ALERT FUNCTION
        function KingSweetAlert(type, message) {

            if (type) { // success
                if (message == null) message = "Information Has Been Updated Successfully."
                const Toast = Swal.mixin({
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.onmouseenter = Swal.stopTimer;
                        toast.onmouseleave = Swal.resumeTimer;
                    }
                });
                Toast.fire({
                    icon: "success",
                    title: message
                });
            } else { // error
                if (message == null) message = "Something Went Wrong."
                const Toast = Swal.mixin({
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 5000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.onmouseenter = Swal.stopTimer;
                        toast.onmouseleave = Swal.resumeTimer;
                    }
                });
                Toast.fire({
                    icon: "error",
                    title: message
                });
            }
        }
    </script>
}