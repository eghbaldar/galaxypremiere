@* DevelopeR: Alimohammad Eghbaldar http://eghbaldar.ir *@
@using Endpoint.Site.Models.Users.GetPhoto
@using galaxypremiere.Application.Services.UsersPhotos.Queries.GetUsersPhotoAlbum;
@model dynamic
@{
    Layout = "~/Views/Shared/_LayoutInnerPages.cshtml";
}
@await Component.InvokeAsync("UserPhotosNavigation")

<style>
    /*Modal*/
    .close {
        border: 0;
        background-color: white;
        font-size: 30px;
        color: lightgray;
    }
    /*Social Media*/
    .sharedIcon {
        padding: 5px;
        font-size: 20px;
    }
    /*General*/
    .white_shd {
        box-shadow: none !important;
    }

    .heading_section {
        border-top: 0;
        box-shadow: 2px 20px 12px -16px rgba(0,0,0,0.37);
        -webkit-box-shadow: 2px 20px 12px -16px rgba(0,0,0,0.37);
        -moz-box-shadow: 2px 20px 12px -16px rgba(0,0,0,0.37);
    }

    .album h4 {
        color: black;
    }

    .column {
        cursor: pointer;
        position: relative;
    }
    /*Folowing Menu On Album*/
    .divAlbumMenu {
        visibility: hidden;
        position: absolute;
        top: 4px;
        left: 5px;
    }

    .album:hover .divAlbumMenu {
        visibility: visible;
    }

    @@media (max-width:800px) {
        .divAlbumMenu {
            visibility: visible;
        }
    }
    /*DropMenu On the menu on album*/
    .dropbtn {
        background-color: transparent;
        color: white;
        padding: 5px;
        font-size: 26px;
        border: none;
    }

    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f1f1f1;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        .dropdown-content a {
            color: black;
            padding: 9px 13px;
            text-decoration: none;
            display: block;
        }

            .dropdown-content a:hover {
                background-color: #ddd;
            }

    .dropdown:hover .dropdown-content {
        display: block;
    }
    /* Loader for headshot and header */
    .loader {
        display: none;
        width: 100px;
        height: 100px;
        margin: auto;
        border: 16px solid #f3f3f3;
        border-radius: 50%;
        border-top: 16px solid #3498db;
        -webkit-animation: spin 2s linear infinite;
        animation: spin 2s linear infinite;
        opacity: .7;
    }

    @@-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(360deg);
        }
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
    /* Headshot */
    .HoverChangePhoto {
        margin: auto;
        display: none;
        color: white;
        background-color: black;
        width: 250px;
        height: 25px;
        border: 1px solid #ccc;
        padding: 5px;
        -moz-border-radius: 5px;
        -webkit-border-radius: 5px;
        border-radius: 5px;        
    }

    #dropzoneAvatar {
        position: relative;
        border: 3px dashed gray;
        color: #000;
        font: bold 14px arial;
        height: 200px;
        margin: 30px auto;
        text-align: center;
        width: 100%;
        background: url('../../../../sitetemplate/innerpages/images/layout_img/addPhotoPhoto.svg') no-repeat;
        background-color: #CACACA;
        background-position: center center;
        background-size: contain;
        -moz-border-radius: 10px;
        -webkit-border-radius: 10px;
        border-radius: 10px;
    }

        #dropzoneAvatar div {
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
        }

        #dropzoneAvatar img {
            border-radius: 50%;
            vertical-align: middle;
            max-width: 100%;
            max-height: 100%;
            width: 100%;
            height: 100%;
        }

        #dropzoneAvatar [type="file"] {
            cursor: pointer;
            position: absolute;
            opacity: 0;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
        }
</style>
<style>
    .containerG {
        padding: 3rem;
    }

    .rowG {
        columns: 4;
        column-gap: 3rem;
    }

    .itemG {
        position: relative;
        display: block;
        width: 100%;
        margin-bottom: 10%;
        img

    {
        width: 100%;
    }

    }

    .itemG:hover .caption {
        opacity: 1;
        padding: 20px;
    }

    .itemG > .caption {
        position: absolute;
        left: 0px;
        right: 0px;
        bottom: 0px;
        background: rgba(0,0,0,.5);
        opacity: 0;
        transition: all 1s;
        cursor: pointer;
        text-align: center;
        color: white;
    }

    .itemG .imgG {
        cursor: pointer;
    }

    .spanInputSwitch {
        cursor: pointer;
        text-align:left;
        width:100%;
    }

    #txtPhotoDetail:focus {
        height: 200px;
    }
</style>

<div id="TabUserAlbums" class="TabcontentClass active">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">ALBUMS</h4>
        </div>
        <div class="card-body">
            <div class="basic-form">
                <!-- Gallery section -->
                <div class="col-md-12">
                    <div class="white_shd full margin_bottom_30">
                        <div class="row mt-3" id="divAlbum">
                            <div class="col-sm-4 col-md-3 margin_bottom_30 album">
                                <div class="column">
                                    <a data-fancybox="gallery"
                                       onclick="OpenModalAddAlbum();">
                                        <img class="img-responsive"
                                             src="~/SiteTemplate/innerpages/images/layout_img/addAlbumProfile.svg" alt="#">
                                    </a>
                                </div>
                                <div class="heading_section">
                                    <h4>+ ADD A NEW ALBUM</h4>
                                </div>
                            </div>
                            @*@foreach (GetUsersPhotoAlbumServiceDto album in Model.Album.resultGetUsersPhotoAlbumServiceDto){}*@
                            @for (int i = 0; i <= Model.Album.resultGetUsersPhotoAlbumServiceDto.Count - 1; i++)
                            {
                                <div class="col-sm-4 col-md-3 margin_bottom_30 album">
                                    <div class="column">
                                        <a data-fancybox="gallery" onclick="OpenAlbum(this,'@Model.Album.resultGetUsersPhotoAlbumServiceDto[i].Id','@Model.Album.resultGetUsersPhotoAlbumServiceDto[i].Title')">
                                            <img class="img-responsive"
                                             src="~/SiteTemplate/innerpages/images/layout_img/addPhotoProfile.svg"
                                             alt="#">
                                        </a>
                                        <div class="divAlbumMenu">
                                            <div class="dropdown" style="float:right;">
                                                <button class="dropbtn">
                                                    <i class="fa fa-ellipsis-v"></i>
                                                </button>
                                                <div class="dropdown-content">
                                                    <a onclick="OpenAlbum(this,'@Model.Album.resultGetUsersPhotoAlbumServiceDto[i].Id','@Model.Album.resultGetUsersPhotoAlbumServiceDto[i].Title')">Photos</a>
                                                    <a onclick="DeletePhotoAlbum('@Model.Album.resultGetUsersPhotoAlbumServiceDto[i].Id','@Model.Album.resultGetUsersPhotoAlbumServiceDto[i].Title')">Delete</a>
                                                    <a onclick="UpdatePhotoAlbumTitle('@Model.Album.resultGetUsersPhotoAlbumServiceDto[i].Id','@Model.Album.resultGetUsersPhotoAlbumServiceDto[i].Title')">Rename</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="heading_section">
                                        <h4>@Model.Album.resultGetUsersPhotoAlbumServiceDto[i].Title</h4>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="TabUserPhotos" class="TabcontentClass">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">PHOTOS</h4>
        </div>
        <div class="card-body">
            <div class="basic-form">
                <div>
                    <input type="hidden" id="hiddenAlbumName" />
                    <span id="spanAlbumName"></span>
                    @*88888888888888888888888888888888888888888888*@
                    <div id="dropzoneAvatar" class="dropped">
                        <div>
                            <img src="~/SiteTemplate/innerpages/images/user-headshot/" />
                        </div>
                        <div id="HeadshotLoader" class="loader"></div>
                        <div id="HeadshotChangePhoto" class="HoverChangePhoto">CLICK OR DRAG TO UPLOAD</div>
                        <input id="filedropzoneAvatar" type="file" />
                    </div>
                    @*88888888888888888888888888888888888888888888*@
                    <!-- Gallery -->
                    <div class="containerG" id="containerPhotos">
                        <div class="rowG">
                            @if (Model.Photo.resultGetUsersPhotoPhotosServiceDto != null)
                            {
                                @for (int i = 0; i <= Model.Photo.resultGetUsersPhotoPhotosServiceDto.Count - 1; i++)
                                {
                                    <div class="itemG">
                                        <a class="imgG" onclick="OpenModalPhoto('@Model.Photo.resultGetUsersPhotoPhotosServiceDto[i].Id','@Model.Photo.resultGetUsersPhotoPhotosServiceDto[i].Title','@Model.Photo.resultGetUsersPhotoPhotosServiceDto[i].Detail','@Model.Photo.resultGetUsersPhotoPhotosServiceDto[i].Filename')">
                                            <img src="~/SiteTemplate/innerpages/images/user-photos/@Model.Photo.resultGetUsersPhotoPhotosServiceDto[i].Filename"
                                         class="rounded"
                                         alt="@Model.Photo.resultGetUsersPhotoPhotosServiceDto[i].Title" />
                                        </a>
                                        <span class="caption" onclick="OpenModalPhoto('@Model.Photo.resultGetUsersPhotoPhotosServiceDto[i].Id','@Model.Photo.resultGetUsersPhotoPhotosServiceDto[i].Title','@Model.Photo.resultGetUsersPhotoPhotosServiceDto[i].Detail','@Model.Photo.resultGetUsersPhotoPhotosServiceDto[i].Filename')">
                                            <a>
                                                @if (Model.Photo.resultGetUsersPhotoPhotosServiceDto[i].Title == null)
                                                {
                                                    <span id="spanTitle_@Model.Photo.resultGetUsersPhotoPhotosServiceDto[i].Id">- unknown title -</span>
                                                }
                                                else
                                                {
                                                    <span id="spanTitle_@Model.Photo.resultGetUsersPhotoPhotosServiceDto[i].Id">@Model.Photo.resultGetUsersPhotoPhotosServiceDto[i].Title </span>
                                                }
                                            </a>
                                        </span>

                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <!-- Gallery -->
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Photo -->
<div class="modal fade" id="modalPhoto">

    <input id="HiddenPhotoID" type="hidden" />


    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">PHOTO DETAIL</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row ">
                        <div class="col-md text-center">
                            <img id="photo" class="rounded img-fluid" />
                            <div class="inputs p-2">
                                <div class="inputSwitch">
                                    <span class="spanInputSwitch" id="txtPhotoTitleSpan"></span>
                                    <input id="txtPhotoTitle" class="form-control" hidden />
                                </div>
                                <div class="inputSwitch">
                                    <span class="spanInputSwitch" style=" white-space: pre-line;" id="txtPhotoDetailSpan"></span>
                                    <textarea id="txtPhotoDetail" class="form-control" cols="40" rows="5" hidden></textarea>
                                </div>
                            </div>

                            <hr />
                            <a href="#" class="sharedIcon fa fa-facebook"></a>
                            <a href="#" class="sharedIcon fa fa-linkedin"></a>
                            <a href="#" class="sharedIcon fa fa-twitter"></a>
                            <a href="#" class="sharedIcon fa fa-google"></a>
                            <a href="#" class="sharedIcon fa fa-instagram"></a>
                            <a href="#" class="sharedIcon fa fa-pinterest"></a>
                        </div>

                    </div>
                </div>
            </div>
            <div class="modal-footer">

                <div class="icon_info">
                    <div class="float-sm-end">
                        <button type="button"
                                onclick="DeletePhotoPhoto();" class="btn btn-secondary">
                            DELETE PHOTO
                        </button>
                    </div>
                    <ul>
                        <li><a href="#" class="fa fa-heart-o"><span class="badge">3</span></a></li>
                    </ul>
                    <ul>
                        <li><a href="#" class="fa fa-comments-o"><span class="badge">3</span></a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<!--  modal -->
@section Scripts{
    @* Tabs *@
    <script src="~/sitetemplate/innerpages/plugins/tabNavigation/tab.js"></script>
    @* File Extension and Volume *@
    <script src="~/lib/kingfuncs/fileextensionsize/fileextensionsize.js"></script>
    @* Functions *@
    <script>
        /*@* Album Section *@*/
        function OpenModalAddAlbum() {
            Swal.fire({
                title: "ALBUM TITLE",
                input: "text",
                inputLabel: "This filed is required.",
                showCancelButton: true,
                inputValidator: (value) => {
                    if (!value) {
                        return "You need to write something!";
                    } else {
                        pageWaitMe("progress"); // loading process starts
                        $.ajax({
                            contentType: 'application/x-www-form-urlencoded',
                            postType: 'json',
                            type: 'POST',
                            data: { 'Title': value },
                            url: 'ProfileAlbumPost',
                            success: function (data) {
                                if (data.isSuccess) {
                                    KingSweetAlert(true, null);
                                    $("#divAlbum").load(window.location + " #divAlbum");
                                }
                            },
                            error: function (req, status, err) {
                                KingSweetAlert(false, null);
                            }
                        }).always(function () {
                            pageWaitMeRemove(); // loading process stops
                        });
                    }
                }
            });
        }
        function DeletePhotoAlbum(id, title) {
            Swal.fire({
                title: 'Delete [' + title + '] album',
                text: 'All the photos of the album will be deleted, are you sure?',
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#000222',
                cancelButtonColor: '#000222',
                confirmButtonText: 'Yes',
                cancelButtonText: 'No'
            }).then((result) => {
                if (result.value) {
                    pageWaitMe("progress"); // loading process starts
                    $.ajax({
                        contentType: 'application/x-www-form-urlencoded',
                        postType: 'json',
                        type: 'POST',
                        data: { 'Id': id },
                        url: 'ProfileAlbumDelete',
                        success: function (data) {
                            if (data.isSuccess) {
                                KingSweetAlert(true, null);
                                $("#divAlbum").load(window.location + " #divAlbum");
                            }
                        },
                        error: function (req, status, err) {
                            KingSweetAlert(false, null);
                        }
                    }).always(function () {
                        pageWaitMeRemove(); // loading process stops
                    });
                }
            });
        }
        function UpdatePhotoAlbumTitle(id, title) {
            Swal.fire({
                title: 'The Album Current Title is [' + title + ']',
                input: "text",
                inputLabel: "New Title:",
                showCancelButton: true,
                inputValidator: (value) => {
                    if (!value) {
                        return "You Need to Write Something!";
                    } else {
                        pageWaitMe("progress"); // loading process starts
                        $.ajax({
                            contentType: 'application/x-www-form-urlencoded',
                            postType: 'json',
                            type: 'POST',
                            data: { 'Id': id, 'Title': value },
                            url: 'ProfileAlbumRenameUpdate',
                            success: function (data) {
                                if (data.isSuccess) {
                                    KingSweetAlert(true, null);
                                    $("#divAlbum").load(window.location + " #divAlbum");
                                }
                            },
                            error: function (req, status, err) {
                                KingSweetAlert(false, null);
                            }
                        }).always(function () {
                            pageWaitMeRemove(); // loading process stops
                        });
                    }
                }
            });
        }
        function OpenAlbum(event, id, title) {
            $("#spanAlbumName").text(title);
            $("#hiddenAlbumName").val(id);
            tabNavigationByTabName('TabUserPhotos');
        }
        /*@* Upload Js *@*/
        var dropzoneavatar = $("#dropzoneAvatar");
        dropzoneavatar.on({
            dragenter: draginavatar,
            dragleave: dragoutavatar
        });
        var inputavatar = dropzoneavatar.find('input');
        inputavatar.on('change', dropavatar);
        $(dropzoneavatar).hover(
            function () {
                $("#HeadshotChangePhoto").css("display", "inline");
                dropzoneavatar.css("opacity", "0.5")
            }, function () {
                $(this).find("#HeadshotChangePhoto").css("display", "none");
                dropzoneavatar.css("opacity", "1")
            }
        );
        function draginavatar(e) { //function for drag into element, just turns the bix X white
            $(dropzoneavatar).addClass('hover');
            $("#HeadshotChangePhoto").css("display", "inline");
            dropzoneavatar.css("opacity", "0.5")
        }
        function dragoutavatar(e) { //function for dragging out of element
            $(dropzoneavatar).removeClass('hover');
             $(this).find("#HeadshotChangePhoto").css("display", "none");
                dropzoneavatar.css("opacity", "1")
        }
        function dropavatar(e) {

            var file = this.files[0];
            // the following functions uses (fileextensionsize.js)
            if (KingCheckSizeExtension(file, ["jpg", "png", "bmp", "jpeg"], "2097152", true)) { // => 2 Mb // NOTE: If you want to change this value you will have to change the same value in (UpdateUsersInformationHeadshotService.cs) and (UploadSmallFilesService.cs)
                // ////////////////////////// Loaders
                $("#HeadshotLoader").css("display", "table-cell"); // circle loading on photo
                $("#dropzoneAvatar *").attr("disabled", "disabled").off('click'); // disable clickable
                $("#dropzoneAvatar *").css({ // clear ...
                    cursor: "wait",
                    opacity: "0.6",
                });
                $("#filedropzoneAvatar").css("opacity", "0");
                pageWaitMe("progress"); // loading process starts
                ////////////////////////////// upload file here

                var postData = new FormData();
                postData.append("File", file);
                postData.append("UsersAlbumsId", $("#hiddenAlbumName").val());
                postData.append("Title", "");
                postData.append("Detail", "");
                $.ajax({
                    contentType: false,
                    processData: false,
                    type: 'POST',
                    data: postData,
                    url: 'PostPhoto',
                    success: function (data) {
                        if (data.isSuccess) {
                            //////////////////////////// Loaders
                            $("#HeadshotLoader").css("display", "none"); // circle loading on photo
                            $("#dropzoneAvatar *").attr("disabled", false).off('click'); // enable clickable
                            $("#dropzoneAvatar *").css({ // clear ...
                                opacity: "1",
                                cursor: "pointer",
                            });
                            $("#filedropzoneAvatar").css("opacity", "0");
                            //////////////////////////////
                            $("#containerPhotos").load(window.location + " #containerPhotos");
                        }
                        else {
                            KingSweetAlert(false, data.message);
                        }
                    },
                    error: function (req, res, err) {
                        KingSweetAlert(false, err);
                    }
                }).always(function () {
                    $("#HeadshotLoader").css("display", "none"); // circle loading on photo
                    $("#dropzoneAvatar *").attr("disabled", false).off('click'); // enable clickable
                    $('#dropzoneAvatar').removeClass('hover').addClass('dropped').find('img').remove();
                    $('#filedropzoneAvatar').val('');
                    $("#dropzoneAvatar *").css({ // clear ...
                        cursor: "pointer"
                    });
                    pageWaitMeRemove(); // loading process stops
                });
            }
        }
        /*@* Photo Section *@*/
        function OpenModalPhoto(id, title, detail, filename) {
            
            $("#modalPhoto").modal("show");

            var controlId = $("#HiddenPhotoID");
            var controlTitleSpan = $("#txtPhotoTitleSpan");
            var controlDetailSpan = $("#txtPhotoDetailSpan");
            var controlPhoto = $("#photo");
            
            controlId.val(id);
            if (title.trim() == '') controlTitleSpan.text('- unknown title -'); else controlTitleSpan.text(title);
            if (detail.trim() == '') controlDetailSpan.text('- unknown detail -'); else controlDetailSpan.html(detail);
            controlPhoto.attr("src", "../../../SiteTemplate/innerpages/images/user-photos/" + filename);

        }
        $('document').ready(function () {
            $('#txtPhotoTitle,#txtPhotoDetail').bind('blur', function () {
                var input = $(this);
                var span = $(this).attr("hidden", true).siblings("span").show();

                if (input.attr('id') == 'txtPhotoTitle') {
                    if (input.val() == '') {
                        span.text('- unknown title -');
                    }
                    else {
                        span.text(input.val());
                    }
                }
                if (input.attr('id') == 'txtPhotoDetail') {
                    if (input.val() == '') {
                        span.text('- unknown detail -');
                    }
                    else {
                        span.text(input.val().replaceAll("<br>", "\n"));
                        //alert('s');
                    }
                }
                // update service launch here:
                if (input.val() != '')
                    UpdatePhotoInformation($("#HiddenPhotoID").val(), input.attr('id'), input.val());
            });
        });
        $('.spanInputSwitch').click(function () {
            var controlId = $("#HiddenPhotoID");
            var input = $(this).hide().siblings("input");
            var textarea = $(this).hide().siblings("textarea");
            input.attr("hidden", false).focus().select();
            textarea.attr("hidden", false).focus().select();

            if (input.attr('id') == 'txtPhotoTitle') {
                if ($(this).text() == '- unknown title -') {
                    input.attr("placeholder", "Type title of your photo");
                    input.val('');
                }
                else {
                    input.val($(this).text());
                }
            }
            if (textarea.attr('id') == 'txtPhotoDetail') {     
                if ($(this).text() == '- unknown detail -') {
                    textarea.attr("placeholder", "Type detail of your photo");
                    textarea.val('');
                }
                else {
                    textarea.val($(this).html().replaceAll("<br>", "\n"));
                }
            }
        });
        function UpdatePhotoInformation(PhotoId, ControlId, value) {
            pageWaitMe("progress"); // loading process starts
            $.ajax({
                contentType: 'application/x-www-form-urlencoded',
                postType: 'json',
                type: 'POST',
                data: { 'Id': PhotoId, 'ControlId': ControlId, 'Value': value.replaceAll('\n', "<br>") },
                url: 'UpdatePhoto',
                success: function (data) {
                    KingSweetAlert(true, null);
                },
                error: function (req, status, err) {
                    KingSweetAlert(false, null);
                }
            }).always(function () {
                $("#containerPhotos").load(window.location + " #containerPhotos");
                pageWaitMeRemove(); // loading process stops
            });
        }
        function DeletePhotoPhoto() {
            Swal.fire({
                title: 'PHOTO DELETION!',
                text: 'Are you sure to delete this photo?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#000222',
                cancelButtonColor: '#000222',
                confirmButtonText: 'Yes,Sure.',
                cancelButtonText: 'No'
            }).then((result) => {
                if (result.value) {
                    pageWaitMe("progress"); // loading process starts
                    $.ajax({
                        contentType: 'application/x-www-form-urlencoded',
                        postType: 'json',
                        type: 'POST',
                        data: { 'Id': $("#HiddenPhotoID").val() },
                        url: 'DeletePhoto',
                        success: function (data) {
                            KingSweetAlert(true, null);
                            $("#containerPhotos").load(window.location + " #containerPhotos"); // refresh photos
                        },
                        error: function (req, status, err) {
                            KingSweetAlert(false, null);
                        }
                    }).always(function () {
                        pageWaitMeRemove(); // loading process stops
                        $('.modal').modal('hide');
                        $(document.body).removeClass('modal-open');
                    });
                }
            });
        }
        // CLOSE FUNCTION FOR ALL MODALS: (when you are supposed to add modals dynamically, for instance):
        $(document).keydown(function (event) {
            if (event.keyCode == 27) {
                $('.modal').modal('hide');
            }
        });
        // SWEET ALERT FUNCTION
        function KingSweetAlert(type, message) {

            if (type) { // success
                if (message == null) message = "Information Has Been Updated Successfully."
                const Toast = Swal.mixin({
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.onmouseenter = Swal.stopTimer;
                        toast.onmouseleave = Swal.resumeTimer;
                    }
                });
                Toast.fire({
                    icon: "success",
                    title: message
                });
            } else { // error
                if (message == null) message = "Something Went Wrong."
                const Toast = Swal.mixin({
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 5000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.onmouseenter = Swal.stopTimer;
                        toast.onmouseleave = Swal.resumeTimer;
                    }
                });
                Toast.fire({
                    icon: "error",
                    title: message
                });
            }
        }
    </script>
}