@* DevelopeR: Alimohammad Eghbaldar http://eghbaldar.ir *@
@using Endpoint.Site.Models.Users.GetProfile
@model ModelGetProfile
@{
    Layout = "~/Views/Shared/_LayoutInnerPages.cshtml";
}
@section Styles{
    @*Only for this page*@

    @*datapicker*@
    <link href="~/lib/datapicker/datepicker.min.css" rel="stylesheet" />
    <style>
        fieldset {
            border: 1px dashed #E0E0E0 !important;
            padding: 0 1.4em 1.4em 1.4em !important;
            -webkit-box-shadow: 0px 0px 0px 0px #000;
            box-shadow: 0px 0px 0px 0px #000;
            margin-top: 15px !important;
            -moz-border-radius: 5px;
            -webkit-border-radius: 5px;
            border-radius: 5px;
        }

        legend {
            font-size: 1.2em !important;
            font-weight: bold !important;
            text-align: left !important;
            width: auto;
            padding: 0 10px;
            border-bottom: none;
            margin-top: -15px;
            background-color: white;
            color: #808080;
        }

        .add_new_frm_field_btn {
            padding: 15px !important;
            border: 2px dotted gray;
            background-color: white;
            -moz-border-radius: 5px;
            -webkit-border-radius: 5px;
            border-radius: 5px;
        }

        .add_icon {
            color: black;
        }

        .btn_round {
            -moz-border-radius: 5px;
            -webkit-border-radius: 5px;
            border-radius: 5px;
            border: 0px !important;
            background-color: #f2f2f2;
        }

        .fa-trash-alt {
            padding: 10px;
            color: #808080;
        }
    </style>
>
}
@await Component.InvokeAsync("UserProfileNavigation")

<div id="TabUserEducation" class="TabcontentClass active">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">Eduction</h4>
        </div>
        <div class="card-body">
            <div class="basic-form">
                <form asp-action="Create" id="frmAddUser" method="post">

                    <div class="form_field_outer">
                        @for (byte i = 0; i <= Model.ResultGetUserProfileEducationsServiceDto.getUserProfileEducationsServiceDto.Count - 1; i++)
                        {
                            <div class="row form_field_outer_row" id="educational_form_@i">
                                <fieldset>
                                    <legend>Educational Case [@((int)@i + (int)1)]</legend>
                                    <input type="hidden"
                                       id="txtId_@i"
                                       value="@Model.ResultGetUserProfileEducationsServiceDto.getUserProfileEducationsServiceDto[i].Id" />
                                    <div class="input-group mb-3">
                                        <span class="input-group-text">Name</span>
                                        <input type="text"
                                           class="form-control"
                                           id="txtSchoolName_@i"
                                           value="@Model.ResultGetUserProfileEducationsServiceDto.getUserProfileEducationsServiceDto[i].Name"
                                           placeholder="School, Instituion, College, University Name">
                                    </div>

                                    <div class="input-group mb-3">
                                        <span class="input-group-text">Field of Study</span>
                                        <input type="text"
                                           class="form-control"
                                           id="txtField_@i"
                                           value="@Model.ResultGetUserProfileEducationsServiceDto.getUserProfileEducationsServiceDto[i].Field"
                                           placeholder="Directing, Software engineering, ...">
                                    </div>

                                    <div style="display:flex;">
                                        <div>
                                            <label class="input-group-text" style="border-radius:5px 0px 0px 5px;"
                                               for="inputGroupSelect01">From</label>
                                        </div>
                                        <div>
                                            <input readonly
                                               placeholder="Starting date of Eduction"
                                               style="border-radius:0px;border-left:0;" width="300"
                                               value="@Model.ResultGetUserProfileEducationsServiceDto.getUserProfileEducationsServiceDto[i].From"
                                               id="datepickerFrom_@i">
                                        </div>
                                    </div>

                                    <div style="display:flex;">
                                        <div>
                                            <label class="input-group-text" style="border-radius:5px 0px 0px 5px;"
                                               for="inputGroupSelect01">To</label>
                                        </div>
                                        <div>
                                            <input readonly
                                               placeholder="Ending date of Eduction"
                                               style="border-radius:0px;border-left:0;" width="300"
                                               value="@Model.ResultGetUserProfileEducationsServiceDto.getUserProfileEducationsServiceDto[i].To"
                                               id="datepickerTo_@i">
                                        </div>
                                    </div>

                                    <div class="form-group col-md-2 add_del_btn_outer">
                                        <button class="btn_round remove_node_btn_frm_field"
                                            id="btn_remove_node_btn_frm_field_@i"
                                            onclick="DeleteProfileEducation(this,'@Model.ResultGetUserProfileEducationsServiceDto.getUserProfileEducationsServiceDto[i].Id')">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </div>

                                </fieldset>

                            </div>
                        }
                    </div>

                    <div class="input-group mt-3">
                        <button type="button" class="add_new_frm_field_btn">
                            <i class="fas fa-plus add_icon"></i> Add New Educational Case
                        </button>
                        <br />
                        <button type="button" onclick="GetProfileEducationElements()"
                                id="btnUpdateProfileEducations" class="btn cur-p btn-primary" disabled>
                            Update
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div id="TabUserFavoriteMovie" class="TabcontentClass">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">Favorite Movies</h4>
        </div>
        <div class="card-body">
            <div class="basic-form">
                <form asp-action="Create" id="frmAddUser" method="post">
                    <button type="button" onclick="UpdateInfoAccount()" id="btnUpdateAccount" class="btn cur-p btn-primary">
                        Update
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>
<div id="TabUserCompany" class="TabcontentClass">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">Company</h4>
        </div>
        <div class="card-body">
            <div class="basic-form">
                <form asp-action="Create" id="frmAddUser" method="post">
                    <button type="button" onclick="UpdateInfoAccount()" id="btnUpdateAccount" class="btn cur-p btn-primary">
                        Update
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>
<div id="TabUserNews" class="TabcontentClass">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">News</h4>
        </div>
        <div class="card-body">
            <div class="basic-form">
                <form asp-action="Create" id="frmAddUser" method="post">
                    <button type="button" onclick="UpdateInfoAccount()" id="btnUpdateAccount" class="btn cur-p btn-primary">
                        Update
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>
<div id="TabUserPhotos" class="TabcontentClass">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">Photos</h4>
        </div>
        <div class="card-body">
            <div class="basic-form">
                <form asp-action="Create" id="frmAddUser" method="post">
                    <button type="button" onclick="UpdateInfoAccount()" id="btnUpdateAccount" class="btn cur-p btn-primary">
                        Update
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>
<div id="TabUserAttachments" class="TabcontentClass">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">Attachments</h4>
        </div>
        <div class="card-body">
            <div class="basic-form">
                <form asp-action="Create" id="frmAddUser" method="post">
                    <button type="button" onclick="UpdateInfoAccount()" id="btnUpdateAccount" class="btn cur-p btn-primary">
                        Update
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>
<div id="TabUserLinks" class="TabcontentClass">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">Links</h4>
        </div>
        <div class="card-body">
            <div class="basic-form">
                <form asp-action="Create" id="frmAddUser" method="post">
                    <button type="button" onclick="UpdateInfoAccount()" id="btnUpdateAccount" class="btn cur-p btn-primary">
                        Update
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    @* Tabs *@
    <script src="~/sitetemplate/innerpages/plugins/tabNavigation/tab.js"></script>
    @*Datapicker*@
    <script src="~/lib/datapicker/datapicker.js"></script>
    @for (byte i = 0; i <= Model.ResultGetUserProfileEducationsServiceDto.getUserProfileEducationsServiceDto.Count - 1; i++)
    {
        <script>
            $('#datepickerFrom_@i').datepicker({
                uiLibrary: 'bootstrap5'
            });
            $('#datepickerTo_@i').datepicker({
                uiLibrary: 'bootstrap5'
            });
        </script>
    }
    @if (Model.ResultGetUserProfileEducationsServiceDto.getUserProfileEducationsServiceDto.Count > 0)
    {
        <script>
            $(document).ready(function () {
                $("#btnUpdateProfileEducations").prop("disabled", false);
            });
        </script>
    }
    @* Functions *@

    <script>
        function GetProfileEducationElements() {

            var Id;
            var schoolName;
            var fieldlName;
            var dateFrom;
            var dateTo;
            var postData = [];

            var inputValues = $('.form_field_outer :input').map(function () {

                var type = $(this).prop("type");
                var value = $(this).prop("value");
                var id = $(this).prop("id");

                if (type == "hidden") {
                    if (id.indexOf("txtId") == 0) Id = value;
                }
                if (type == "text") {
                    if (value.trim() == '')
                        $("#" + id).css("border-bottom", "2px dashed #ff8585");
                    else
                        $("#" + id).css("border-bottom", "1px solid #dee2e6");
                    if (id.indexOf("txtSchoolName") == 0) schoolName = value;
                    if (id.indexOf("txtField") == 0) fieldlName = value;
                    if (id.indexOf("datepickerFrom") == 0) dateFrom = value;
                    if (id.indexOf("datepickerTo") == 0) dateTo = value;
                }
                if (type == "submit") {
                    postData.push(Id + "|" + schoolName + "|" + fieldlName + "|" + dateFrom + "|" + dateTo + "|")
                }
            });
            PostProfileEducation(postData);
        }
        function PostProfileEducation(data) {
            pageWaitMe("progress"); // loading process starts
            btnWaitMe_Start('btnUpdateProfileEducations'); // Loading Button Start
            var postData = { 'info': data, }
            $.ajax({
                contentType: 'application/x-www-form-urlencoded',
                dataType: 'json',
                type: 'POST',
                data: postData,
                url: 'ProfileEducationPost',
                success: function (data) {
                    if (data.isSuccess) {
                        Swal.fire({
                            position: "center",
                            icon: "success",
                            title: "Information has been saved",
                            showConfirmButton: false,
                            timer: 1000
                        });
                        btnWaitMe_Stop('btnUpdateProfileEducations'); // Loading Button Stops
                        pageWaitMeRemove(); // loading process stops
                    }
                    else {
                        Swal.fire({
                            position: "center",
                            icon: "error",
                            title: data.message,
                            showConfirmButton: false,
                            timer: 3000
                        });
                        btnWaitMe_Stop('btnUpdateProfileEducations'); // Loading Button Stops
                        pageWaitMeRemove(); // loading process stops
                    }
                },
                error: function (req, status, err) {
                    Swal.fire({
                        position: "center",
                        icon: "error",
                        title: "Something went wrong, please try it again or later!",
                        showConfirmButton: false,
                        timer: 3000
                    });
                }
            });
        }
        function DeleteProfileEducation(e, Id) {
            pageWaitMe("progress"); // loading process starts
            //btnWaitMe_Start(e.id); // Loading Button Start
            var postData = { 'Id': Id, }
            $.ajax({
                contentType: 'application/x-www-form-urlencoded',
                dataType: 'json',
                type: 'POST',
                data: postData,
                url: 'ProfileEducationDelete',
                success: function (data) {
                    if (data.isSuccess) {
                        Swal.fire({
                            position: "center",
                            icon: "success",
                            title: "Information has been saved",
                            showConfirmButton: false,
                            timer: 1000
                        });
                        btnWaitMe_Stop(e.id); // Loading Button Stops
                        pageWaitMeRemove(); // loading process stops
                    }
                    else {
                        Swal.fire({
                            position: "center",
                            icon: "error",
                            title: data.message,
                            showConfirmButton: false,
                            timer: 3000
                        });
                        btnWaitMe_Stop(e.id); // Loading Button Stops
                        pageWaitMeRemove(); // loading process stops
                    }
                },
                error: function (req, status, err) {
                    Swal.fire({
                        position: "center",
                        icon: "error",
                        title: "Something went wrong, please try it again or later!",
                        showConfirmButton: false,
                        timer: 3000
                    });
                }
            });
        }
    </script>

    @*Add Runtime Controls*@
    <script type="text/javascript">
        function generateGuid() {
            return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);
        }
        $(document).ready(function () {
            $("body").on("click", ".add_new_frm_field_btn", function () {
                $("#btnUpdateProfileEducations").prop("disabled", false);
                //var index = $(".form_field_outer").find(".form_field_outer_row").length + 1;
                var guid = generateGuid();
                $(".form_field_outer").append(`

                                <div class="row form_field_outer_row" id="educational_form_`+ guid.toString() + `">

                        <fieldset>
                                    <legend>Educational Case</legend>

                                    <input type="hidden"
                            id="txtId_`+ guid.toString() + `"
                    />

                            <div class="input-group mb-3">
                                <span class="input-group-text">Name</span>
                                <input type="text"
                                        class="form-control"
                                                id="txtSchoolName_`+ guid.toString() + `"
                                        placeholder="School, Instituion, College, University Name">
                            </div>

                            <div class="input-group mb-3">
                                <span class="input-group-text">Field of Study</span>
                                <input type="text"
                                        class="form-control"
                                                id="txtField_`+ guid.toString() + `"
                                        placeholder="Directing, Software engineering, ...">
                            </div>

                                                                <div style="display:flex;">
                                <div>
                                    <label class="input-group-text" style="border-radius:5px 0px 0px 5px;"
                                            for="inputGroupSelect01">From</label>
                                </div>
                                <div>
                                    <input readonly
                                            placeholder="Starting date of Eduction"
                                            style="border-radius:0px;border-left:0;" width="300"
                                                    id="datepickerFrom_`+ guid.toString() + `">
                                </div>
                            </div>

                            <div style="display:flex;">
                                <div>
                                    <label class="input-group-text" style="border-radius:5px 0px 0px 5px;"
                                            for="inputGroupSelect01">To</label>
                                </div>
                                <div>
                                    <input readonly
                                            placeholder="Ending date of Eduction"
                                            style="border-radius:0px;border-left:0;" width="300"
                                                            id="datepickerTo_`+ guid.toString() + `">
                                </div>
                            </div>

                            <div class="form-group col-md-2 add_del_btn_outer">
                                <button class="btn_round remove_node_btn_frm_field"
                                                         id="btn_remove_node_btn_frm_field_`+ guid.toString() + `"
                                >
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </div>
                        </fieldset>

                    </div>

                                                                    `);

                $('#datepickerFrom_' + guid.toString()).datepicker({
                    uiLibrary: 'bootstrap5'
                });
                $('#datepickerTo_' + guid.toString()).datepicker({
                    uiLibrary: 'bootstrap5'
                });

                //$(".form_field_outer").find(".remove_node_btn_frm_field:not(:first)").prop("disabled", false);
                //$(".form_field_outer").find(".remove_node_btn_frm_field").first().prop("disabled", true);
            });
        });
        //===== delete the form fieed row
        $(document).ready(function () {
            $("body").on("click", ".remove_node_btn_frm_field", function () {
                btnWaitMe_Start(this.id); // Loading Button Start
                $(this).closest(".form_field_outer_row").remove();
                var index = $(".form_field_outer").find(".form_field_outer_row").length;
                if (index == 0) $("#btnUpdateProfileEducations").prop("disabled", true);
            });
        });

    </script>

}